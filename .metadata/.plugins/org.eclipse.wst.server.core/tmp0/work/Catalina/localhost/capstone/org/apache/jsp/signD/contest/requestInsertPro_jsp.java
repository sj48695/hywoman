/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2019-02-21 14:24:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.signD.contest;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import signD.member.AlarmDBBean;
import java.time.DayOfWeek;
import java.time.Month;
import java.sql.Timestamp;
import signD.contest.RequestDataBean;
import signD.contest.RequestDBBean;
import signD.member.LogonDataBean;
import signD.member.LogonDBBean;

public final class requestInsertPro_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("signD.member.AlarmDBBean");
    _jspx_imports_classes.add("signD.contest.RequestDBBean");
    _jspx_imports_classes.add("java.time.Month");
    _jspx_imports_classes.add("java.time.DayOfWeek");
    _jspx_imports_classes.add("java.sql.Timestamp");
    _jspx_imports_classes.add("signD.member.LogonDataBean");
    _jspx_imports_classes.add("signD.contest.RequestDataBean");
    _jspx_imports_classes.add("signD.member.LogonDBBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("utf-8");
	String id = (String) session.getAttribute("id");

      out.write('\r');
      out.write('\n');
      signD.contest.RequestDataBean rq = null;
      rq = (signD.contest.RequestDataBean) _jspx_page_context.getAttribute("rq", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (rq == null){
        rq = new signD.contest.RequestDataBean();
        _jspx_page_context.setAttribute("rq", rq, javax.servlet.jsp.PageContext.PAGE_SCOPE);
        out.write('\r');
        out.write('\n');
        out.write('	');
        org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("rq"), request);
        out.write('\r');
        out.write('\n');
      }
      out.write('\r');
      out.write('\n');

	long endDay = 0;
	if (rq.getOp_week() == 0) {
		endDay = System.currentTimeMillis() + (7 * 60 * 60 * 24 * 1000);//1주 후 
	} else {
		endDay = System.currentTimeMillis() + (14 * 60 * 60 * 24 * 1000);//2주 후 (일주일 연장)
	}

	LogonDBBean logon = LogonDBBean.getInstance();
	LogonDataBean member = logon.getMember(id);

	RequestDBBean rqdb = RequestDBBean.getInstance();
	AlarmDBBean alarmdb = AlarmDBBean.getInstance();

	rq.setId(id);
	rq.setReg_date(new Timestamp(System.currentTimeMillis()));
	rq.setEnd_date(new Timestamp(endDay));
	int check = rqdb.insertRequest(rq);

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

	if (check == 1) {

      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\talert(\"콘테스트가 개최되었습니다.\");\r\n");
      out.write("</script>\r\n");

	} else {

      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\talert(\"다시한번 시도해주세요.\");\r\n");
      out.write("</script>\r\n");

	}

      out.write("\r\n");
      out.write("<meta http-equiv=\"Refresh\" content=\"0;url=contestList.jsp\">");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
