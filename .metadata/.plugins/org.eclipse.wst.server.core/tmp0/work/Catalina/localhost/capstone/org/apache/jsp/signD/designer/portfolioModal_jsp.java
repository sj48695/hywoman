/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2019-02-21 14:18:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.signD.designer;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import signD.member.LogonDBBean;
import signD.contest.RequestDataBean;
import signD.contest.RequestDBBean;
import signD.member.PortfolioDataBean;
import signD.member.PortfolioDBBean;

public final class portfolioModal_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("signD.member.PortfolioDataBean");
    _jspx_imports_classes.add("signD.contest.RequestDBBean");
    _jspx_imports_classes.add("signD.contest.RequestDataBean");
    _jspx_imports_classes.add("signD.member.LogonDBBean");
    _jspx_imports_classes.add("signD.member.PortfolioDBBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    ");

	request.setCharacterEncoding("utf-8");
	String id=(String)session.getAttribute("id");
	if(id==null){id="";}
    int pfcode=Integer.parseInt(request.getParameter("portfoliocode"));
    int rqcode=Integer.parseInt(request.getParameter("requestcode"));
	//String requesterId=request.getParameter("requesterId");
	
	LogonDBBean logon= LogonDBBean.getInstance();
	
    PortfolioDBBean pfdb=PortfolioDBBean.getInstance();
	PortfolioDataBean pf=pfdb.getPortfolio(pfcode);
	
	RequestDBBean rqdb=RequestDBBean.getInstance();
	RequestDataBean rq = rqdb.getRequest(rqcode);
	

	String Dday=rqdb.getDday(rqcode);
	String filenames[]=pf.getFile().split(",");
    
    
      out.write("\r\n");
      out.write("<div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\" style=\"max-width:1000px\">\r\n");
      out.write("\t<div class=\"modal-content\">\r\n");
      out.write("\t\t<div class=\"modal-body p-0\">\r\n");
      out.write("\t\t\t<div class=\"media row\">\r\n");
      out.write("\t\t\t\t<div id=\"carouselFade");
      out.print(pfcode );
      out.write("\" class=\"carousel slide pr-0 carousel-fade col-md-8 align-self-center\" data-ride=\"carousel\">\r\n");
      out.write("\t\t\t\t\t<ol class=\"carousel-indicators\">\r\n");
      out.write("\t\t\t\t");

					if(filenames.length>1){
						for (int j = 0; j < filenames.length ; j++) {
				
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<li data-target=\"#carouselFade");
      out.print(pfcode);
      out.write("\" data-slide-to=\"");
      out.print(j );
      out.write('"');
      out.write(' ');
if(j==0){
      out.write("class=\"active\"");
} 
      out.write("></li>\r\n");
      out.write("\t\t\t\t");

						}
					}
				
      out.write("\r\n");
      out.write("\t\t\t\t\t</ol>\r\n");
      out.write("\t\t\t\t\t<div class=\"carousel-inner\" >\r\n");
      out.write("\t\t\t\t\t\t<div class=\"carousel-item active\">\r\n");
      out.write("\t\t\t\t\t\t\t<img class=\"d-block w-100\" src=\"/capstone/fileSave/portfolioFile/");
if(rqcode!=0){
      out.print(rq.getCategory() );
      out.write('/');
} 
      out.print(filenames[filenames.length-1]);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t");

					for (int j = filenames.length - 1; j > 0; j--) {
				
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<div class=\"carousel-item middle\">\r\n");
      out.write("\t\t\t\t\t\t\t<img class=\"d-block w-100\" src=\"/capstone/fileSave/portfolioFile/");
if(rqcode!=0){
      out.print(rq.getCategory() );
      out.write('/');
} 
      out.print(filenames[j - 1]);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t");

					}
				
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t");

					if (filenames.length > 1) {
				
      out.write("\r\n");
      out.write("\t\t\t\t\t<a class=\"carousel-control-prev\" href=\"#carouselFade");
      out.print(pfcode);
      out.write("\" role=\"button\" data-slide=\"prev\"> \r\n");
      out.write("\t\t\t\t\t\t<i class=\"fas fa-angle-left\"></i>\r\n");
      out.write("\t\t\t\t\t\t<span class=\"sr-only\">Previous</span>\r\n");
      out.write("\t\t\t\t\t</a> \r\n");
      out.write("\t\t\t\t\t<a class=\"carousel-control-next\" href=\"#carouselFade");
      out.print(pfcode);
      out.write("\" role=\"button\" data-slide=\"next\"> \r\n");
      out.write("\t\t\t\t\t\t<i class=\"fas fa-angle-right\"></i>\r\n");
      out.write("\t\t\t\t\t\t<span class=\"sr-only\">Next</span>\r\n");
      out.write("\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t");

					}
				
      out.write("\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"col-md-4 pl-3\" id=\"content");
      out.print(pfcode);
      out.write("\" style=\"background-color: #e9ecef;\">\r\n");
      out.write("\t\t\t\t\t<h4 class=\"py-4 m-0\">\r\n");
      out.write("\t\t\t\t\t\t");

							if (rqcode == 0) {
						
      out.print(pf.getTitle());
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");

							} else {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<a href=\"/capstone/signD/contest/requestDetail.jsp?requestcode=");
      out.print(rqcode);
      out.write('"');
      out.write('>');
      out.print(pf.getTitle());
      out.write("</a>\r\n");
      out.write("\t\t\t\t\t\t");
	} 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n");
      out.write("\t\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t</h4>\r\n");
      out.write("\t\t\t\t\t<div class=\"row pl-4 pb-2\">\r\n");
      out.write("\t\t\t\t\t\t<img src=\"/capstone/imageFile/profileImg/");
      out.print(logon.getMember(pf.getId()).getProfileimg());
      out.write("\" class=\"rounded-circle\" style=\"width: 50px; height: 50px\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-8\">\r\n");
      out.write("\t\t\t\t\t\t\t<strong><a href=\"/capstone/signD/designer/profile.jsp?designerId=");
      out.print(pf.getId() );
      out.write('"');
      out.write('>');
      out.print(pf.getId() );
      out.write("</a></strong>\r\n");
      out.write("\t\t\t\t\t\t\t<br><div class=\"py-1\"><strong>우승횟수 ");
      out.print(logon.getMember(pf.getId()).getChoosecount() );
      out.write("회\t|\t조회수 ");
      out.print(pf.getViewcount() );
      out.write("회</strong></div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"mr-3 mt-2 mb-5\" style=\"height: 430px; border-top:1px solid #BDBDBD;\">\r\n");
      out.write("\t\t\t\t\t\t<textarea class=\"form-control p-2 p-0\" cols=\"20\" rows=\"15\" disabled=\"disabled\"\r\n");
      out.write("\t\t\t\t\t\t\tstyle=\"border:none; background-color: #e9ecef;\">");
      out.print(pf.getContents());
      out.write("</textarea>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"pr-4 p-3\" aria-pressed=\"false\">\r\n");
      out.write("\t\t\t\t\t\t");

							if (id.equals(pf.getId())) {//마감 전 수정, 삭제 가능
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<button onclick=\"location.href='/capstone/signD/designer/portfolioUpdateForm.jsp?pfcode=");
      out.print(pf.getPortfoliocode());
      out.write("&rqcode=");
      out.print(rqcode);
      out.write("'\"\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"btn btnOr offset-1 col-md-5\">수정하기</button> \r\n");
      out.write("\t\t\t\t\t\t<button onclick=\"deleteCheck('/capstone/signD/designer/portfolioDeletePro.jsp?pfcode=");
      out.print(pf.getPortfoliocode());
      out.write("&rqcode=");
      out.print(rqcode);
      out.write("')\"\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"btn col-md-5\" style=\"background-color: darkgray; color: white;\">삭제하기</button>\r\n");
      out.write("\t\t\t\t\t\t");

							}
						
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
