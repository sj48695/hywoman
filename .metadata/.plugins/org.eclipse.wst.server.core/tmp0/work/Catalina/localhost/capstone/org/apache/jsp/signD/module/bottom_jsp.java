/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2019-02-21 14:18:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.signD.module;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class bottom_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	String id = (String) session.getAttribute("id");

      out.write("\r\n");
      out.write("<div class=\"main_footer\">\r\n");
      out.write("\t<div class=\"main_sector\">\r\n");
      out.write("\t\t<div class=\"ft_top container\">\r\n");
      out.write("\t\t\t<div class=\"ft_inline\">\r\n");
      out.write("\t\t\t\t<div class=\"ft_page_rows\">\r\n");
      out.write("\t\t\t\t\t<div class=\"ft_page_sub ft_inline\">디자인의뢰</div>\r\n");
      out.write("\t\t\t\t\t<ul class=\"ft_inline ft_ul\">\r\n");
      out.write("\t\t\t\t\t\t<li class=\"ft_li\">\r\n");
      out.write("\t\t\t\t\t\t\t<a \r\n");
      out.write("\t\t\t\t\t\t\t");
if (id != null) {
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\thref=\"/capstone/signD/contest/designRequest1.jsp\"\r\n");
      out.write("\t\t\t\t\t\t\t");
} else {
      out.write(" \r\n");
      out.write("\t\t\t\t\t\t\t\tdata-toggle=\"modal\" href=\"#\" data-target=\"#member\" \r\n");
      out.write("\t\t\t\t\t\t\t");
}
      out.write(">공모전 개최하기 </a>\r\n");
      out.write("\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"ft_page_rows\">\r\n");
      out.write("\t\t\t\t\t<div class=\"ft_page_sub ft_inline\">공모전리스트</div>\r\n");
      out.write("\t\t\t\t\t<ul class=\"ft_inline ft_ul\">\r\n");
      out.write("\t\t\t\t\t\t<li class=\"ft_li\"><a href=\"/capstone/signD/contest/contestList.jsp\">진행중인 공모전</a></li>\r\n");
      out.write("\t\t\t\t\t\t<li class=\"ft_li\"><a href=\"/capstone/signD/contest/contestEndList.jsp\">종료된 공모전</a></li>\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"ft_page_rows\">\r\n");
      out.write("\t\t\t\t\t<div class=\"ft_page_sub ft_inline\">디자이너</div>\r\n");
      out.write("\t\t\t\t\t<ul class=\"ft_inline ft_ul\">\r\n");
      out.write("\t\t\t\t\t\t<li class=\"ft_li\"><a href=\"/capstone/signD/designer/designerList.jsp\">디자이너 리스트</a></li>\r\n");
      out.write("\t\t\t\t\t\t<li class=\"ft_li\"><a href=\"/capstone/signD/designer/winningwork.jsp\">포트폴리오</a></li>\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"ft_page_rows\">\r\n");
      out.write("\t\t\t\t\t<div class=\"ft_page_sub ft_inline\">고객센터</div>\r\n");
      out.write("\t\t\t\t\t<ul class=\"ft_inline ft_ul\">\r\n");
      out.write("\t\t\t\t\t\t<li class=\"ft_li\"><a href=\"/capstone/signD/help/notice.jsp\">공지사항</a></li>\r\n");
      out.write("\t\t\t\t\t\t<li class=\"ft_li\"><a href=\"/capstone/signD/help/FAQ.jsp\">자주하는 질문</a></li>\r\n");
      out.write("\t\t\t\t\t\t<li class=\"ft_li\"><a href=\"/capstone/signD/help/Q&A.jsp\">Q&A</a></li>\r\n");
      out.write("\t\t\t\t\t\t<li class=\"ft_li\"><a href=\"/capstone/signD/help/rule.jsp\">이용방법</a></li>\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"ft_right\">\r\n");
      out.write("\t\t\t\t<div class=\"ft_tel\">\r\n");
      out.write("\t\t\t\t\t<img src=\"/capstone/signD/module/images/tel.png\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"ft_bottom container\">\r\n");
      out.write("\t\t\t<div class=\"ft_page_rows ft_inline\">\r\n");
      out.write("\t\t\t\t<div class=\"ft_inline\">\r\n");
      out.write("\t\t\t\t\t<a href=\"#\"> \r\n");
      out.write("\t\t\t\t\t\t<img src=\"/capstone/signD/module/do_white.png\" style=\"width:70px;\">\r\n");
      out.write("\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"ft_right\">\r\n");
      out.write("                 <div class=\"ft_text\">\r\n");
      out.write("                    \r\n");
      out.write("                (주)의뢰하시조 | 대표:밥먹고하조 | 사업자번호:120-87-69298 | 통신판매:제2018-서울성동-01577 | 서울시 성동구 사근동 살곳이길 200, 정보문화관 5층(행당동)<br>\r\n");
      out.write("                사이트명:DO | Tel:1533-1234 | Fax:02-2018-1108 | E-mail:help@do.com | 고객센터 운영시간: 오전 9시부터 오후 6시까지(공휴일 제외) | 졸작입니다'_'  \r\n");
      out.write("                \r\n");
      out.write("                 </div>\r\n");
      out.write("              </div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
